version: '3'
services:
  registry:
    image: registry:2
    ports:
      - 8443:8443
    environment:
      REGISTRY_HTTP_ADDR: 0.0.0.0:8443
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/registry.crt
      REGISTRY_HTTP_TLS_KEY: /certs/registry.key
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
    volumes:
      - ./iib_data/registry:/var/lib/registry:z
      - ./docker/registry/certs:/certs:z
      - ./docker/registry/auth:/auth:z

  db:
    image: postgres:9.6
    environment:
      POSTGRES_USER:  iib
      POSTGRES_PASSWORD: iib
      POSTGRES_DB: iib
      POSTGRES_INITDB_ARGS: "--auth='ident' --auth='trust'"

  rabbitmq:
    image: rabbitmq:3.7-management
    environment:
      RABBITMQ_DEFAULT_USER: iib
      RABBITMQ_DEFAULT_PASS: iib
    ports:
      # The RabbitMQ management console
      - 8081:15672

  iib-api:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-api
    command:
    - /bin/sh
    - -c
    - >-
      mkdir -p /etc/iib &&
      cp /broker-certs/client.crt /etc/iib/messaging.crt &&
      cp /broker-certs/client.key /etc/iib/messaging.key &&
      cp /broker-certs/ca.crt /etc/iib/messaging-ca.crt &&
      pip3 uninstall -y iib &&
      python3 setup.py develop --no-deps &&
      iib wait-for-db &&
      iib db upgrade &&
      flask run --reload --host 0.0.0.0 --port 8080
    environment:
      FLASK_ENV: development
      FLASK_APP: iib/web/wsgi.py
      IIB_DEV: 'true'
    volumes:
      - ./:/src:z
      - ./docker/message_broker/certs:/broker-certs:ro,z
      - request-logs-volume:/var/log/iib/requests:z
    ports:
      - 8080:8080
    depends_on:
      - db
      - message-broker

  iib-worker:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-workers
    # Override the default command so that Celery auto-reloads on code changes.
    # This also adds the self-signed CA that was used to sign the Docker registry's certificate
    # to the trusted CA bundle. This will make podman trust the local Docker registry's certificate.
    command:
    - /bin/bash
    - -c
    - >-
      cp /host-ca-bundle.crt /etc/pki/tls/certs/ca-bundle.crt &&
      cat /registry-certs/root_ca.crt >> /etc/pki/tls/certs/ca-bundle.crt &&
      podman login --authfile ~/.docker/config.json.template -u iib -p iibpassword registry:8443 &&
      pip3 install watchdog[watchmedo] &&
      watchmedo auto-restart -d ./iib/workers -p '*.py' --recursive \
        -- celery -A iib.workers.tasks worker --loglevel=info
    environment:
      IIB_DEV: 'true'
      REQUESTS_CA_BUNDLE: /etc/pki/tls/certs/ca-bundle.crt
    # Make this privileged to be able to build container images
    privileged: true
    volumes:
      - ./:/src:z
      - ./iib_data/worker:/var/lib/containers/storage:z
      - ./docker/registry/certs:/registry-certs:ro,z
      - /etc/pki/tls/certs/ca-bundle.crt:/host-ca-bundle.crt:ro
      - request-logs-volume:/var/log/iib/requests:z
    depends_on:
      - rabbitmq
      - registry

  # This is an external message broker used to publish messages about state changes
  message-broker:
    build:
      context: .
      dockerfile: ./docker/message_broker/Dockerfile
    volumes:
      - message-broker-volume:/opt/activemq/data:z
      - ./docker/message_broker/certs:/broker-certs:ro,z
    ports:
      - 5671:5671   # amqp+ssl
      - 5672:5672   # amqp
      - 8161:8161   # web console

volumes:
  message-broker-volume:
  request-logs-volume:
