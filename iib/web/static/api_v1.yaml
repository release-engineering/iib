---
openapi: 3.0.2
info:
  description: |
    IIB is a REST API to manage operator index container images.
  license:
    name: GPL-3.0
  title: IIB API
  version: '1.0'
servers:
  - url: /api/v1
paths:
  /builds:
    get:
      description: Return all the IIB build requests
      parameters:
        - name: batch
          in: query
          description: The batch to filter the build requests by
          schema:
            type: integer
            example: 23
            default: null
        - name: page
          in: query
          description: The specific page to view
          schema:
            type: integer
            example: 1
            default: 1
        - name: per_page
          in: query
          description: The number of build requests to show per page
          schema:
            type: integer
            example: 10
            default: 20
        - name: state
          in: query
          description: The state to filter the build requests by
          schema:
            type: string
            example: in_progress
            default: null
        - name: verbose
          in: query
          description: 'Shows the same view as /builds/{id}'
          schema:
            type: boolean
            example: true
            default: false
      responses:
        '200':
          description: A list of build requests
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/AddResponse'
                        - $ref: '#/components/schemas/RmResponse'
                        - $ref: '#/components/schemas/RegenerateBundleResponse'
                        - $ref: '#/components/schemas/MergeIndexImageResponse'
                  meta:
                    $ref: '#/components/schemas/Pagination'
        '400':
          description: The query parameters are invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: >-
                      awesome is not a valid request state. Valid states are:
                      complete, failed, in_progress
        '404':
          description: No build requests were found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: The requested resource was not found
  '/builds/{id}':
    get:
      description: Return a specific build request
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the build request to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: The requested build request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AddResponseVerbose'
                  - $ref: '#/components/schemas/RmResponseVerbose'
                  - $ref: '#/components/schemas/RegenerateBundleResponseVerbose'
                  - $ref: '#/components/schemas/MergeIndexImageResponseVerbose'
        '404':
          description: The build request wasn't found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: The requested resource was not found
    patch:
      description: Update a build request (requires special authorization)
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the build request to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: The build request was updated
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AddResponseVerbose'
                  - $ref: '#/components/schemas/RmResponseVerbose'
                  - $ref: '#/components/schemas/RegenerateBundleResponseVerbose'
        '400':
          description: The input is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: The input data must be a JSON object
        '401':
          description: The user is not authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: You must be authenticated to perform this action
        '403':
          description: >
            The user is not allowed to create a build request with this input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: This API endpoint is restricted to IIB workers
        '404':
          description: The request wasn't found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: The requested resource was not found
      requestBody:
        description: The keys to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUpdate'
      security:
        - Kerberos Authentication: []
  /healthcheck:
    get:
      description: Perform a health check of the service
      responses:
        '200':
          description: The health check OK message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Health check OK
        '500':
          description: Health check failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Database health check failed
  '/builds/{id}/logs':
    get:
      description: Return the logs for a specific build request
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the build request to retrieve the logs for
          schema:
            type: integer
      responses:
        '200':
          description: The logs for the build request
          content:
            text/plain:
              schema:
                type: string
              example: |-
                Processing build request 1...
                Building image...
                Done processing build request 1
        '404':
          description: Logs for build requests is not enabled in IIB
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: The requested resource was not found
        '410':
          description: The logs for the build request has been removed due to expiration
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: The logs for the build request 1 no longer exist
  /builds/add:
    post:
      description: >
        Submit a build request to add operator bundles to an index image
      requestBody:
        description: The build request to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRequest'
      security:
        - Kerberos Authentication: []
      responses:
        '201':
          description: The build request was initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddResponseVerbose'
        '400':
          description: The input is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: '"bundles" should be a non-empty array of strings'
        '401':
          description: >
            The user is not allowed to create a request with this input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: You must be authenticated to perform this action
  /builds/rm:
    post:
      description: >
        Submit a build request to remove operators from an index image
      requestBody:
        description: The build request to remove
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RmRequest'
      security:
        - Kerberos Authentication: []
      responses:
        '201':
          description: The build request was initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RmResponseVerbose'
        '400':
          description: The input is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: '"operators" should be a non-empty array of strings'
        '401':
          description: The user is not allowed to submit a build request with this input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: You must be authenticated to perform this action
  /builds/regenerate-bundle:
    post:
      description: Submit a build request to regenerate an operator bundle image
      requestBody:
        description: The build request to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateBundleRequest'
      security:
        - Kerberos Authentication: []
      responses:
        '201':
          description: The build request was initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegenerateBundleResponseVerbose'
        '400':
          description: The input is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: '"organization" must be a string'
        '401':
          description: The user is not allowed to submit a build request with this input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: You must be authenticated to perform this action
  /builds/regenerate-bundle-batch:
    post:
      description: >
        Submit a batch of build requests to regenerate an operator bundle image
      requestBody:
        description: The build requests to create
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                annotations:
                  type: object
                  description: >
                    An arbitrary JSON object associated with the batch. This is accessed by the
                    "batch_annotations" key's value on a build request in the batch.
                build_requests:
                  type: array
                  items:
                    $ref: '#/components/schemas/RegenerateBundleRequest'
      security:
        - Kerberos Authentication: []
      responses:
        '201':
          description: The build requests were initiated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegenerateBundleResponseVerbose'
        '400':
          description: The input is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: '"organization" must be a string'
        '401':
          description: The user is not allowed to submit a build request with this input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: You must be authenticated to perform this action
  /builds/add-rm-batch:
    post:
      description: >
        Submit a batch of build requests to add or
        remove operators to/from an index image.
      requestBody:
        description: The build requests to create
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                annotations:
                  type: object
                  description: >
                    An arbitrary JSON object associated with the batch. This is accessed by the
                    "batch_annotations" key's value on a build request in the batch.
                build_requests:
                  type: array
                  description: Request objects of type Add or Rm
                  items:
                    anyOf:
                      - $ref: '#/components/schemas/AddRequest'
                      - $ref: '#/components/schemas/RmRequest'
      security:
        - Kerberos Authentication: []
      responses:
        '201':
          description: The build requests were initiated
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AddResponseVerbose'
                  - $ref: '#/components/schemas/RmResponseVerbose'
        '400':
          description: The input is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: >-
                      "organization" must be a string. This occurred on the build request
                      in index 0.
        '401':
          description: The user is not allowed to submit a build request with this input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: You must be authenticated to perform this action
  /builds/merge-index-image:
    post:
      description: Submit a build request to merge index images
      requestBody:
        description: The build request to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeIndexImageRequest'
      security:
        - Kerberos Authentication: []
      responses:
        '201':
          description: The build request was initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeIndexImageResponseVerbose'
        '400':
          description: The input is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: '"source_from_index" must be a string'
        '401':
          description: The user is not allowed to create a request with this input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: You must be authenticated to perform this action
components:
  schemas:
    BundleMapping:
      type: object
      example:
        some_operator:
          - quay.io/user/openshift-bundle-example-container:v1
      properties:
        operator:
          type: array
          items:
            type: string
          example:
            - some_bundle
            - some_other_bundle
    Pagination:
      type: object
      properties:
        first:
          type: string
          example: >-
            https://iib.domain.local/api/v1/builds?page=1&per_page=20&verbose=False
        last:
          type: string
          example: >-
            https://iib.domain.local/api/v1/builds?page=3&per_page=20&verbose=False
        next:
          type: string
          example: >-
            https://iib.domain.local/api/v1/builds?page=1&per_page=20&verbose=False
        page:
          type: integer
          example: 1
        pages:
          type: integer
          example: 3
        per_page:
          type: integer
          example: 20
        previous:
          type: string
          example: null
        total:
          type: integer
          example: 45
    OMPSOperatorVersion:
      type: object
      example:
        some_operator:
          - "1.0.0"
    BaseResponse:
      type: object
      properties:
        arches:
          type: array
          items:
            type: string
          example:
            - amd64
            - s390x
        batch:
          type: integer
          example: 23
          description: The batch that the request is a part of
        id:
          type: integer
          example: 1
        state:
          type: string
          example: complete
        state_reason:
          type: string
          example: Completed successfully
        updated:
          type: string
          example: '2019-09-17T19:42:47.149979'
        user:
          type: string
          example: msdhoni@DOMAIN.LOCAL
    BaseResponseVerbose:
      - type: object
        properties:
          batch_annotations:
            type: object
            description: >
              An arbitrary JSON object created by the submitter associated with the batch.
          state_history:
            type: array
            items:
              $ref: '#/components/schemas/StateHistory'
          logs:
            type: object
            properties:
              url:
                type: string
                description: URL to fetch the logs for the request
              expiration:
                type: string
                description: >-
                  UTC timestamp in ISO format that indicates when the logs for the request are
                  considered to be expired and will be removed.
            example:
              url: https://iib.domain.local/api/v1/builds/1/logs
              expiration: '2019-09-19T19:35:15.722265Z'
    AddRmResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            organization:
              type: string
              description: The name of the organization the bundle was regenerated for.
              example: openshift-operators
            binary_image:
              type: string
              example: 'quay.io/operator-framework/upstream-registry-builder:v1.5.9'
            binary_image_resolved:
              type: string
              example: >-
                quay.io/operator-framework/upstream-registry-builder@sha256:7d8e5dddad0275bc903b6ef17840f98441b15b8b999609af2c9579960e52080e
            bundles:
              type: array
              items:
                type: string
              example:
                - 'quay.io/user/openshift-bundle-example-container:v1'
            bundle_mapping:
              $ref: '#/components/schemas/BundleMapping'
            deprecation_list:
              type: array
              items:
                type: string
              description: >
                List of bundles to be deprecated from the new index image.
              example:
                - 'quay.io/user/openshift-bundle-example-container@sha256:29e4531e4625653'
            from_index:
              type: string
              example: 'quay.io/iib-stage/iib:4'
            from_index_resolved:
              type: string
              example: >-
                quay.io/iib-stage/iib@sha256:7d8e5dddad0275bc903b6ef17840f98441b15b8b999609af2c9579960e52080e
            index_image:
              type: string
              example: 'quay.io/iib-stage/iib:5'
            distribution_scope:
              description: >
                The scope of distribution for the index created by the request.
                This determined what level of protection the addition or removal had.
              type: string
              example: 'prod'
            removed_operators:
              type: array
              items:
                type: string
              example:
                - prometheus-operator
    AddRequest:
      type: object
      properties:
        add_arches:
          type: array
          description: >
            This add_arches array is required when from_index is not provided.
          items:
            type: string
          example:
            - amd64
            - s390x
        binary_image:
          type: string
          example: 'quay.io/operator-framework/upstream-registry-builder:v1.5.9'
        bundles:
          type: array
          description: >
            List of bundles. Note: Any duplicate bundle will be removed.
          items:
            type: string
          example:
            - 'quay.io/user/openshift-bundle-example-container:v1'
        cnr_token:
          type: string
          description: >
            This token is required only if support for legacy app registry is
            required.
          example: token
        deprecation_list:
          type: array
          items:
            type: string
          description: >
            List of bundles to be deprecated from the new index image.
          example:
            - 'quay.io/user/openshift-bundle-example-container@sha256:29e4531e4625653'
        force_backport:
          type: boolean
          description: >
            If True, always backport packages to the legacy app registry via OMPS. Requires
            cnr_token and organization to be set if True.
          default: false
        from_index:
          type: string
          description: >
            from_index is required when add_arches is not provided.
          example: 'quay.io/iib-stage/iib:4'
        organization:
          type: string
          description: >
            The organization is required only if support for legacy app registry
            is required.
          example: openshift-operators
        overwrite_from_index:
          type: boolean
          description: >
            Overwrites the input from_index image with the built index image. This can only be
            performed by privileged users unless overwrite_from_index_token is also provided.
          default: false
        overwrite_from_index_token:
          type: string
          description: >
            The token used for reading and overwriting the input from_index image. This is required
            for non-privileged users to use overwrite_from_index. It's also useful for dealing with
            index images that IIB does not have access to. The format of the token is in the format
            "user:password".
          example: token
        distribution_scope:
          description: >
              The scope of distribution for the index created by the request.
              This will determine what level of protection the addition will have.
          type: string
          example: 'prod'
      required:
        - bundles
    AddResponse:
      allOf:
        - $ref: '#/components/schemas/AddRmResponse'
        - type: object
          properties:
            request_type:
              type: string
              example: add
            omps_operator_version:
              $ref: '#/components/schemas/OMPSOperatorVersion'
    RmRequest:
      type: object
      properties:
        add_arches:
          type: array
          items:
            type: string
          example:
            - amd64
            - s390x
        binary_image:
          type: string
          example: 'quay.io/operator-framework/upstream-registry-builder:v1.5.9'
        from_index:
          type: string
          example: 'quay.io/iib-stage/iib:4'
        operators:
          type: array
          items:
            type: string
          example:
            - quay.io/user/openshift-operator
        overwrite_from_index:
          type: boolean
          description: >
            Overwrites the input from_index image with the built index image. This can only be
            performed by privileged users unless overwrite_from_index_token is also provided.
          default: false
        overwrite_from_index_token:
          type: string
          description: >
            The token used for overwriting the input from_index image. This is required for
            non-privileged users to use overwrite_from_index. The format of the token must be in
            the format "user:password".
          example: token
        distribution_scope:
          description: >
                The scope of distribution for the index created by the request.
                This will determine what level of protection the removal will have.
          type: string
          example: 'prod'
      required:
        - from_index
        - operators
    RmResponse:
      allOf:
        - $ref: '#/components/schemas/AddRmResponse'
        - type: object
          properties:
            request_type:
              type: string
              example: rm
    RegenerateBundleRequest:
      type: object
      properties:
        from_bundle_image:
          type: string
          description: >-
            The pull specification of the original bundle image that will be modified.
          example: 'quay.io/user/openshift-bundle-example-container:v1'
        organization:
          type: string
          description: >-
            The name of the organization the bundle should be regenerated for. If provided,
            the value must exist in IIB's server configuration. This will be used to perform
            various modifications in the operator metadata embeded in the operator bundle
            image, e.g. change the container registry, or the operator package name.
          example: 'openshift-operators'
      required:
        - from_bundle_image
    RegenerateBundleResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            organization:
              type: string
              description: The name of the organization the bundle was regenerated for.
              example: openshift-operators
            request_type:
              type: string
              example: regenerate-bundle
            bundle_image:
              type: string
              example: 'quay.io/user/openshift-bundle-example-container:v1'
            from_bundle_image:
              type: string
              description: The pull specification of the original bundle image that was modified.
              example: 'quay.io/user/openshift-bundle-example-container:v1'
            from_bundle_image_resolved:
              type: string
              example: >-
                quay.io/user/openshift-bundle-example-container@sha256:7d8e5dddad0275bc903b6ef17840f98441b15b8b999609af2c9579960e52080e
    MergeIndexImageRequest:
      type: object
      properties:
        binary_image:
          type: string
          example: 'quay.io/operator-framework/upstream-registry-builder:v1.5.9'
        deprecation_list:
          type: array
          items:
            type: string
          description: >
            List of bundles to be deprecated from the new index image.
          example:
            - 'quay.io/user/openshift-bundle-example-container@sha256:29e4531e4625653'
        source_from_index:
          type: string
          description: >
            Index image that will be used as a base for the new index image.
          example: 'quay.io/iib-stage/iib:4.5'
        target_index:
          type: string
          description: >
            Pull specification of the index image whose bundles from which are going to be added
            to the content of source_from_index. The resulting index image will use the ocp_version
            label of this index image.
          example: 'quay.io/iib-stage/iib:4.6'
        overwrite_target_index:
          type: boolean
          description: >
            Overwrites the input target_index image with the built index image. This can only
            be performed by privileged users unless overwrite_target_index_token is also provided.
          default: false
        overwrite_target_index_token:
          type: string
          description: >
            The token used for reading and overwriting the input target_index image. This is
            required for non-privileged users to use overwrite_target_index. It's also useful for
            dealing with index images that IIB does not have access to. The format of the token is
            in the format "user:password". If token is required for accessing the index images,
            then both of them have to be in the same repository.
          example: token
        distribution_scope:
          description: >
              The scope of distribution for the index created by the request.
              This will determine what level of protection the addition will have.
          type: string
          example: 'prod'
      required:
        - source_from_index
    MergeIndexImageResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            request_type:
              type: string
              example: merge-index-image
            binary_image:
              type: string
              example: 'quay.io/operator-framework/upstream-registry-builder:v1.5.9'
            binary_image_resolved:
              type: string
              example: >-
                quay.io/operator-framework/upstream-registry-builder@sha256:7d8e5dddad0275bc903b6ef17840f98441b15b8b999609af2c9579960e52080e
            deprecation_list:
              type: array
              items:
                type: string
              description: >
                List of bundles to be deprecated from the new index image.
              example:
                - 'quay.io/user/openshift-bundle-example-container@sha256:29e4531e4625653'
            source_from_index:
              type: string
              description: >
                Index image that will be used as a base for the new index image.
              example: 'quay.io/iib-stage/iib:4.5'
            source_from_index_resolved:
              type: string
              example: 'quay.io/iib-stage/iib@sha256:29e4531e46256354653215646354'
            target_index:
              type: string
              description: >
                Pull specification of the index image whose bundles from which are going to be added
                to the content of source_from_index. The resulting index image will use the
                ocp_version label of this index image.
              example: 'quay.io/iib-stage/iib:4.6'
            target_index_resolved:
              type: string
              example: 'quay.io/iib-stage/iib@sha256:29e4531e42312485432154565351'
            index_image:
              type: string
              example: 'quay.io/iib-stage/iib:5'
            distribution_scope:
              description: >
                The scope of distribution for the index created by the request.
                This determined what level of protection the addition or removal had.
              type: string
              example: 'prod'
    RequestUpdate:
      type: object
      properties:
        arches:
          type: array
          items:
            type: string
          example:
            - amd64
            - s390x
        binary_image_resolved:
          type: string
          example: >-
            quay.io/operator-framework/upstream-registry-builder@sha256:7d8e5dddad0275bc903b6ef17840f98441b15b8b999609af2c9579960e52080e
        bundle_image:
          type: string
          example: >-
            quay.io/user/openshift-bundle-example-container:v1
        bundle_mapping:
          $ref: '#/components/schemas/BundleMapping'
        deprecation_list:
          type: array
          items:
            type: string
          example:
            - 'quay.io/user/openshift-bundle-example-container@sha256:29e4531e4625653'
        from_bundle_image:
          type: string
          example: >-
            quay.io/user/openshift-bundle-example-container@sha256:7d8e5dddad0275bc903b6ef17840f98441b15b8b999609af2c9579960e52080e
        from_bundle_image_resolved:
          type: string
          example: >-
            quay.io/user/openshift-bundle-example-container@sha256:7d8e5dddad0275bc903b6ef17840f98441b15b8b999609af2c9579960e52080e
        from_index_resolved:
          type: string
          example: >-
            quay.io/iib-stage/iib@sha256:7d8e5dddad0275bc903b6ef17840f98441b15b8b999609af2c9579960e52080e
        index_image:
          type: string
          example: 'quay.io/iib-stage/iib:4'
        state:
          type: string
          example: complete
        state_reason:
          type: string
          example: Completed successfully
    AddResponseVerbose:
      allOf:
        - $ref: '#/components/schemas/BaseResponseVerbose'
        - $ref: '#/components/schemas/AddResponse'
    RmResponseVerbose:
      allOf:
        - $ref: '#/components/schemas/BaseResponseVerbose'
        - $ref: '#/components/schemas/RmResponse'
    MergeIndexImageResponseVerbose:
      allOf:
        - $ref: '#/components/schemas/BaseResponseVerbose'
        - $ref: '#/components/schemas/MergeIndexImageResponse'
    RegenerateBundleResponseVerbose:
      allOf:
        - $ref: '#/components/schemas/BaseResponseVerbose'
        - $ref: '#/components/schemas/RegenerateBundleResponse'
    StateHistory:
      type: object
      properties:
        state:
          type: string
        state_reason:
          type: string
        updated:
          type: string
      example:
        state: complete
        state_reason: Completed successfully
        updated: '2019-09-19T19:35:15.722265'
  securitySchemes:
    Kerberos Authentication:
      type: http
      scheme: negotiate
